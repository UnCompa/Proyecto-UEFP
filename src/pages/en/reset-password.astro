---
import { FaEnvelopeCircleCheck } from "react-icons/fa6";
import Navigation from "../../components/Fundamentales/Navigation.astro";
import Layout from "../../layouts/Layout.astro";
---

<Layout title="Reset password">
  <Navigation />
  <main
    class="font-Rubik bg-zinc-100 py-4 dark:bg-zinc-900 min-h-screen h-full"
  >
    <section
      class="container w-full sm:w-2/3 lg:w-1/2 flex p-2 flex-col mx-auto bg-zinc-200 dark:bg-zinc-800 rounded-lg"
    >
      <h2 class="text-center font-bold text-2xl md:text-3xl">
        Reset your password
      </h2>
      <span class="flex justify-center text-3xl md:text-4xl my-2">
        <FaEnvelopeCircleCheck />
      </span>
      <form id="resetForm" class="flex flex-col px-4 w-full">
        <label for="" class="my-1">
          Enter your email to reset your password
        </label>
        <input
          id="email"
          class="py-1 px-2 my-1 rounded outline-none focus:ring-2 focus:ring-red-300 dark:bg-zinc-900"
          name="email"
          type="text"
          placeholder="Email"
        />
        <button
          id="btnForm"
          class="my-1 disabled:bg-emerald-900 disabled:text-zinc-800 disabled:dark:text-zinc-300 bg-emerald-600 rounded"
        >
        Recover
        </button>
      </form>
      <div
        id="messageDiv"
        class="hidden mx-4 my-2 p-2 text-center rounded bg-emerald-700 border border-emerald-400"
      >
        <p id="message">
          Check your email to reset your password
        </p>
      </div>
    </section>
  </main>
</Layout>

<script>
  // Función para crear una cookie
  import { v4 as uuidv4 } from "uuid";
  const createCookie = (name: any, value: any, seconds: any) => {
    let expires = "";
    if (seconds) {
      const date = new Date();
      date.setTime(date.getTime() + seconds * 1000);
      expires = `; expires=${date.toUTCString()}`;
    }
    document.cookie = `${name}=${value || ""}${expires}; path=/`;
  };

  document
    .getElementById("resetForm")
    ?.addEventListener("submit", async (e) => {
      e.preventDefault();
      console.log("Submit");

      const btn = document.getElementById("btnForm") as HTMLButtonElement;
      btn.disabled = true; // Deshabilitar el botón

      const emailInput = document.getElementById("email") as HTMLInputElement;
      const email = emailInput.value.trim(); // Obtener el valor del correo electrónico y eliminar espacios en blanco

      // Expresión regular para validar correo electrónico
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

      // Validar el correo electrónico
      if (!emailRegex.test(email)) {
        const messageDiv = document.getElementById("messageDiv");
        const message = document.getElementById("message");
        if (messageDiv && message) {
          message.textContent =
            "Por favor ingrese un correo electrónico válido.";
          messageDiv.classList.remove("hidden");
        }
        btn.disabled = false; // Habilitar el botón nuevamente
        return; // Salir de la función si la validación falla
      }

      // Aquí puedes continuar con tu lógica para enviar la solicitud al backend
      // y manejar la respuesta según sea necesario
      const formData = new FormData();
      formData.append("email", email);

      try {
        // Simulación de respuesta con un token (reemplazar con lógica real)
        const resetToken = uuidv4();
        // Crear la cookie con el token de restablecimiento
        createCookie("resetToken", resetToken, 3600); // Cookie expira en 1 hora (3600 segundos)
        const url = window.location.origin;
        console.log(url);
        const res = await fetch(`${url}/api/auth/reset`, {
          method: "POST",
          body: formData
        });
        const data = await res.json();
        const messageDiv = document.getElementById("messageDiv");
        const message = document.getElementById("message");
        if (messageDiv && message) {
          message.textContent = data.message;
          messageDiv.classList.remove("hidden");
        }
      } catch (error) {
        console.error("Error al enviar la solicitud:", error);
      }
    });
</script>
