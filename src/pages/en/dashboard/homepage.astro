---
import ThemeIcon from "../../../components/ChangeUI/ThemeIcon.astro";
import NavDashboard from "../../../components/dashboard/NavDashboard";
import ChangeForm from "../../../components/dashboard/ChangeForm";
import ViewData from "../../../components/dashboard/Inicio/ViewData.astro";
import DashBoardBase from "../../../layouts/DashBoardBase.astro";
import { supabase } from "../../../lib/supabase";
import UploadFileForm from "../../../components/dashboard/UploadFileForm.astro";
import VideoPlayer from "../../../components/Utils/VideoPlayer.astro";
import CardChange from "../../../components/dashboard/home/CardChange";
import CardCreate from "../../../components/dashboard/home/CardCreate";
import OtherSectionChange from "../../../components/dashboard/home/OtherSectionChange";
import OtherSectionCreate from "../../../components/dashboard/home/OtherSectionCreate";
const { cookies, redirect } = Astro;
const url = Astro.url;
const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/es/signin");
}
const { data, error } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});
if (error) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/es/signin");
}
const { data: userData } = await supabase
  .from("profiles")
  .select("*")
  .eq("id", data.user?.id);
const roles: string[] = (userData && userData[0]?.roles) || [];
const { data: dataFile } = supabase.storage.from('recursos').getPublicUrl('videos/inicial.mp4')
const videoData = dataFile.publicUrl
const videoSplit = videoData.split(".mp4")
const video = videoSplit[0]
const pathname = Astro.url.pathname
const { data: cardInfo } = await supabase.from("card_homeEn").select("*");
const { data: sectionsEs } = await supabase.from("sectionsEn").select("*");
---

<!-- <ThemeIcon/> -->
<DashBoardBase title="Home Page | Dashboard">
  <main class="dashboard">
    <div
      class="bg-zinc-200 dark:bg-zinc-900 h-full w-full [grid-area:aside] boxshadow"
    >
      <NavDashboard url={url} pathname={pathname} client:load={true}>
        <ThemeIcon />
      </NavDashboard>
    </div>
    <div
      class="p-4 bg-zinc-50 overflow-y-auto dark:bg-zinc-800 w-full h-full [grid-area:main] font-Rubik"
    >
      <section class="flex">
        <div class="flex flex-col items-center p-4 w-full">
          <div class="w-full">
            <h2 class="text-center text-4xl lg:text-6xl font-extrabold py-4">
              Main page
            </h2>
            <div
              class="h-1 mx-auto rounded w-full lg:w-1/2 bg-gradient-to-r from-green-500 to-cyan-500"
            >
            </div>
          </div>
          {
            roles.includes("admin") ? (
              <p class="text-light font-Rubik text-zinc-800 dark:text-zinc-300 p-4">
                In this section you can change the different texts that
                They are presented on the website, with the motto, mission and vision
                institutional, among other things, modify them{" "}
                <strong>when necessary</strong> to maintain with
                truthful and quality information.
              </p>
            ) : (
              <p class="text-light font-Rubik text-zinc-800 dark:text-zinc-300 p-4">
                Explore the content of the home page
              </p>
            )
          }
        </div>
      </section>
      {
        roles.includes("admin") || roles.includes("moderator") ? (
          <section class="container mx-auto flex flex-col gap-8">
            <h2 class="font-bold text-xl md:text-2xl">Links to other pages</h2>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
              <OtherSectionChange table="sectionsEn" client:load />
            </div>
            <OtherSectionCreate table="sectionsEn" client:load />
            <h2 class="font-bold text-xl md:text-2xl">Mission and vision and more</h2>
            <CardChange table="card_homeEn" client:load />
            <CardCreate table="card_homeEn" client:load />
            <h2 class="font-bold text-xl md:text-2xl">Home page texts</h2>
            <ChangeForm
              title="Lema intitucional"
              propiedad="hero-frase"
              lang="en"
              seccion="inicio"
              client:load
            />
            <ChangeForm
              title="Title initial"
              propiedad="main-mision-vision"
              lang="en"
              seccion="inicio"
              client:load
            />
            <ChangeForm
              title="Title presentation"
              propiedad="main-presentacion"
              lang="en"
              seccion="inicio"
              client:load
            />
            <ChangeForm
              title="Others sections"
              propiedad="main-others-seccions"
              lang="en"
              seccion="inicio"
              client:load
            />
            <UploadFileForm title="Subir presentacion" />
          </section>
        ) : (
          <section class="container mx-auto grid grid-cols-1 gap-2">
            <ViewData
              title="Institutional motto"
              propiedad="hero-frase"
              seccion="inicio"
              lang="en"
            />
            <ViewData
              title="Initial title"
              propiedad="main-mision-vision"
              seccion="inicio"
              lang="en"
            />
            <ViewData
              title="Presentation title"
              propiedad="main-presentacion"
              seccion="inicio"
              lang="en"
            />
            <ViewData
              title="Other sections"
              propiedad="main-others-seccions"
              seccion="inicio"
              lang="en"
            />
            {cardInfo?.map((item) => {
              return (
                <div class="grid grid-cols-1 lg:grid-cols-2 container mx-auto font-Rubik p-4 md:p-12">
                  <div class="flex items-center justify-center py-4 lg:p-0">
                    <img
                      loading="lazy"
                      src={item.img_url}
                      alt={item.img_alt}
                      class="reveal rounded h-max w-full md:w-2/3 shadow-xl hover:shadow-orange-500/10 transition-all"
                    />
                  </div>
                  <div class="text-black dark:text-white border-l-4 p-4 border-red-300 dark:border-red-500">
                    <div class="flex items-center justify-start gap-x-2 w-max pr-8 py-2">
                      <slot />
                      <h3 class="text-2xl md:text-4xl font-light title text-pretty">
                        {item.title}
                      </h3>
                    </div>
                    <div class="h-0.5 w-1/2 bg-gradient-to-r  from-red-300 from-10% to-transparent dark:from-red-500 dark:to-yellow-500 rounded" />
                    <p class="text-zinc-800 dark:text-zinc-300 py-2 md:text-lg lg:text-xl font-Rubik font-light">
                      {item.content}
                    </p>
                  </div>
                </div>
              );
            })}
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-2">
              {sectionsEs?.map((item) => {
              return (
                <a
                  href={item.to}
                  class="card flex-1 basis-96 shadow-2xl transition-all border-2 border-transparent hover:border-zinc-500 rounded-lg"
                >
                  <div class="relative bg-zinc-100 dark:bg-zinc-950 p-4 h-full w-full rounded-lg">
                    <div class="flex flex-col items-start gap-x-2">
                      <h3 class="text-2xl md:text-4xl font-Kanit font-bold bg-clip-text text-transparent bg-gradient-to-tr from-purple-500 via-red-500 to-yellow-400">
                        {item.title}
                      </h3>
                      <div class="bg-gradient-to-r my-1 from-purple-500 via-red-500 to-yellow-400 rounded-full h-0.5 w-2/3"></div>
                    </div>
                    <div>
                      <p class="font-Kanit py-2 text-zinc-800 dark:text-zinc-300 z-20">
                        {item.content}
                      </p>
                    </div>
                  </div>
                </a>
              );
            })}
            </div>
            <VideoPlayer url={video} />
          </section>
        )
      }
    </div>
  </main>
</DashBoardBase>
<style>
  .dashboard {
    display: grid;
    grid-template-columns: 200px 1fr;
    grid-template-rows: 100vh;
    grid-template-areas: "aside main";
  }
  @media (max-width: 1024px) {
    .dashboard {
      display: grid;
      grid-template-columns: 1fr;
      grid-template-rows: 96px 1fr;
      grid-template-areas:
        "aside"
        "main";
    }
  }
  .boxshadow {
    box-shadow: 0px -20px 10px black;
  }
</style>
