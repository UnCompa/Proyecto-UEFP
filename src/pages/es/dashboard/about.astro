---
import CardInfo from "../../../components/Cards/CardInfo.astro";
import ThemeIcon from "../../../components/ChangeUI/ThemeIcon.astro";
import NavDashboard from "../../../components/dashboard/NavDashboard";
import HistoryChange from "../../../components/dashboard/about/HistoryChange";
import HistoryCreate from "../../../components/dashboard/about/HistoryCreate";
import StaffChange from "../../../components/dashboard/about/StaffChange";
import StaffCreate from "../../../components/dashboard/about/StaffCreate";
import ObjetivesChange from "../../../components/dashboard/about/ObjetivesChange";
import ObjetivesCreate from "../../../components/dashboard/about/ObjetivesCreate";
import ValuesChange from "../../../components/dashboard/about/ValuesChange";
import ValuesCreate from "../../../components/dashboard/about/ValuesCreate";
import ValuesView from "../../../components/dashboard/about/ValuesView.astro";
import Objectives from "../../../components/sections/Objectives.astro";
import DashBoardBase from "../../../layouts/DashBoardBase.astro";
import { supabase } from "../../../lib/supabase";
import PeopleCard from "../../../components/sections/PeopleCard";
import dayjs from "dayjs";
import LikePage from "../../../components/Utils/LikePage.astro";
const { cookies, redirect } = Astro;
const url = Astro.url;
const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (!accessToken || !refreshToken) {
  return redirect("/es/signin");
}
const { data, error } = await supabase.auth.setSession({
  refresh_token: refreshToken.value,
  access_token: accessToken.value,
});
if (error) {
  cookies.delete("sb-access-token", {
    path: "/",
  });
  cookies.delete("sb-refresh-token", {
    path: "/",
  });

  return redirect("/es/signin");
}
const { data: userData } = await supabase
  .from("profiles")
  .select("*")
  .eq("id", data.user?.id);
const roles: string[] = (userData && userData[0]?.roles) || [];

const { data: dataHistory } = await supabase
  .from("historyes")
  .select("*")
  .order("id", { ascending: true });
const { data: objetivesData } = await supabase
  .from("objetives_es")
  .select("*")
  .order("id", { ascending: true });
const { data: dataStaff } = await supabase
  .from("teachersEs")
  .select("*")
  .order("id", { ascending: true });
const pathname = Astro.url.pathname;
---

<DashBoardBase title="Dashboard | Panel de control" icon="">
  <main class="dashboard">
    <div class="bg-zinc-200 dark:bg-zinc-900 h-full w-full [grid-area:aside] boxshadow">
      <NavDashboard url={url} pathname={pathname} client:load={true}>
        <ThemeIcon />
      </NavDashboard>
    </div>
    <div class="p-4 bg-zinc-50 overflow-y-auto dark:bg-zinc-800 w-full h-full [grid-area:main] font-Kanit">
      <section class="w-full h-max flex flex-col items-center justify-center font-Rubik">
        <h1 class="text-3xl my-8 font-bold md:text-4xl lg:text-5xl bg-clip-text text-transparent bg-gradient-to-b from-blue-500 via-cyan-500 to-black dark:from-white dark:via-zinc-50 dark:to-stone-800">
          Pagina de Sobre nosotros
        </h1>
        {roles.includes("admin") ? (
          <p class="text-center font-light py-4">
            Administra el contenido que se presenta en la pagina de sobre nosotros, usarlo de manera responsable
          </p>
        ) : (
          <p class="text-center font-light py-4">
            Lugar donde recide la información de la Unidad Educativa Fiscal Pichincha explora de manera diferente que ofrece esta sección
          </p>
        )}
      </section>
      <div class="my-2">
        <h3>Ir a la seccion:</h3>
        <ul class="flex w-full gap-2 items-center justify-start my-2">
          <li>
            <a class="w-full px-4 py-1 text-center bg-zinc-100 dark:bg-zinc-900 rounded-lg shadow-xl hover:bg-zinc-950 transition-colors" href="#historia">Historia</a>
          </li>
          <li>
            <a class="w-full px-4 py-1 text-center bg-zinc-100 dark:bg-zinc-900 rounded-lg shadow-xl hover:bg-zinc-950 transition-colors" href="#valores">Valores</a>
          </li>
          <li>
            <a class="w-full px-4 py-1 text-center bg-zinc-100 dark:bg-zinc-900 rounded-lg shadow-xl hover:bg-zinc-950 transition-colors" href="#objetivos">Objetivos</a>
          </li>
          <li>
            <a class="w-full px-4 py-1 text-center bg-zinc-100 dark:bg-zinc-900 rounded-lg shadow-xl hover:bg-zinc-950 transition-colors" href="#personal">Personal</a>
          </li>
        </ul>
      </div>
      <section class="h-max flex flex-col gap-2">
        <h2 class="text-3xl font-bold py-2" id="historia">
          Seccion Historia
        </h2>
        {roles.includes("admin") ? (
          <>
            <HistoryCreate client:load />
            <HistoryChange table="historyes" client:load />
          </>
        ) : roles.includes("moderator") ? (
          <HistoryChange table="historyes" client:load />
        ) : (
          dataHistory?.map((item) => (
            <div class="grid grid-cols-1 md:grid-cols-2 bg-zinc-900 rounded">
              <div class="p-4">
                <hgroup class="h-max">
                  <h2 class="text-2xl font-bold">
                    <span class="font-extrabold">Titulo:</span> {item.title}
                  </h2>
                  <p class="font-light">
                    <span class="font-bold">Contenido:</span> {item.content}
                  </p>
                </hgroup>
              </div>
              <div class="p-4 h-full flex items-center justify-center">
                <img class="h-full max-h-72 border-2 p-2" src={item.img_url} alt={item.img_alt} />
              </div>
            </div>
          ))
        )}
      </section>
      <section class="h-max flex flex-col gap-2">
        <h2 class="text-3xl font-bold py-2" id="valores">
          Seccion Valores
        </h2>
        {roles.includes("admin") ? (
          <>
            <ValuesCreate table="values_es" client:load />
            <ValuesChange table="values_es" client:load />
          </>
        ) : roles.includes("moderator") ? (
          <ValuesChange table="values_es" client:load />
        ) : (
          <ValuesView />
        )}
      </section>
      <section class="h-max flex flex-col gap-2">
        <h2 class="text-3xl font-bold py-2" id="objetivos">
          Seccion Objetivos
        </h2>
        {roles.includes("admin") ? (
          <>
            <ObjetivesCreate table="objetives_es" client:load />
            <ObjetivesChange table="objetives_es" client:load />
          </>
        ) : roles.includes("moderator") ? (
          <ObjetivesChange table="objetives_es" client:load />
        ) : (
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {objetivesData?.map((objetive) => (
              <Objectives title={objetive.title} text={objetive.text} />
            ))}
          </div>
        )}
      </section>
      <section class="h-max flex flex-col gap-2">
        <h2 class="text-3xl font-bold py-2" id="personal">
          Seccion Personal
        </h2>
        {roles.includes("admin") ? (
          <>
            <StaffCreate table="teachersEs" client:load />
            <StaffChange table="teachersEs" client:load />
          </>
        ) : roles.includes("moderator") ? (
          <StaffChange table="teachersEs" client:load />
        ) : (
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 bg-zinc-100 dark:bg-zinc-900 p-4">
            {dataStaff?.map((teacher) => (
              <PeopleCard
                teacher={teacher.name}
                content={teacher.phrase}
                work={teacher.profession}
                img={teacher.image_link}
                client:load
              />
            ))}
          </div>
        )}
      </section>
    </div>
  </main>
  <style>
    .dashboard {
      display: grid;
      grid-template-columns: 200px 1fr;
      grid-template-rows: 100vh;
      grid-template-areas: "aside main";
    }
    @media (max-width: 1024px) {
      .dashboard {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 96px 1fr;
        grid-template-areas:
          "aside"
          "main";
      }
    }
    .boxshadow {
      box-shadow: 0px -20px 10px black;
    }
  </style>
</DashBoardBase>
