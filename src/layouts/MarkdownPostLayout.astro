---
import { Image } from "astro:assets";
import DocsLayout from "./DocsLayout.astro";
import { getLangFromUrl } from "../i18n/utils";
import { Toaster } from "sonner";
import { FaLink } from "react-icons/fa";
const { frontmatter, slug } = Astro.props;
const tags = frontmatter.tags;
const lang = getLangFromUrl(Astro.url);
console.log(slug);
const url = Astro.url.origin;
console.log(url);
---

<DocsLayout pageTitle={frontmatter.title} data={frontmatter}>
  <Toaster richColors client:load />
  <button
    id="clipboard-text"
    data-clipboard-text={`${url}/${lang}/docs/${slug}`}
    class="w-full flex justify-center items-center group"
  >
    <h1 class="text-center">{frontmatter.title}</h1>
    <FaLink
      className="text-2xl text-transparent group-hover:text-black dark:group-hover:text-white ml-4"
    />
  </button>
  <Image
    class="shadow-2xl shadow-red-500/10 mb-4 aspect-video"
    src={frontmatter.image.url}
    alt={frontmatter.image.alt}
    height={52}
    width={100}
    quality={"low"}
    transition:animate="fade"
    transition:name={`imagen-${frontmatter.image.url}`}
  />
  <div class="bg-zinc-100 dark:bg-zinc-900/50 my-2 p-2 rounded">
    <p class="text-zinc-800 dark:text-zinc-300">
      Hecho: {frontmatter.pubDate.toString().slice(0, 10)}
    </p>
    <p class="font-bold">{frontmatter.description}</p>
    <p>
      Escrito por: <span class="text-red-600 dark:text-red-200"
        >{frontmatter.author}</span
      >
    </p>
    <div class="flex gap-2">
      <span class="p-1">{lang === "es" ? "Etiquetas: " : "Tags: "}</span>
      {
        tags.map((tag: any) => {
          return (
            <a
              href={`/${lang}/tags/${tag}`}
              class="bg-zinc-200 dark:bg-zinc-950 p-1 rounded no-underline hover:bg-zinc-300 dark:hover:bg-black"
            >
              {tag}
            </a>
          );
        })
      }
    </div>
  </div>
  <slot />
</DocsLayout>
<script>
  import ClipboardJS from "clipboard";
  import { toast } from "sonner";
  document.addEventListener("astro:page-load", async () => {
    const clipboard = new ClipboardJS("#clipboard-text");
    clipboard.on("success", await function (e) {
      console.log(e.text);
      toast.success("Enlace copiado correctamente");
      e.clearSelection();
    });

    clipboard.on("error", await function(e) {
      toast.error("Error al copiar el enlace");
    });
  });
</script>
