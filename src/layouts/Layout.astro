---
import { getLangFromUrl } from "../i18n/utils";
import { ViewTransitions } from "astro:transitions";
import SpeedInsights from "@vercel/speed-insights/astro";
import { SEO } from "astro-seo";
import { FaCircleArrowUp } from "react-icons/fa6";
const lang = getLangFromUrl(Astro.url);
interface InterfaceOpenGraphBasic {
  title: string;
  type: string;
  image: string;
  url: string;
}

interface InterfaceOpenGraph {
  basic: InterfaceOpenGraphBasic;
}
interface Props {
  title: string;
  icon: string;
  keywords?: string;
  description?: string;
  canonical?: string;
  openGraph?: InterfaceOpenGraph;
}
const {
  title,
  icon,
  keywords,
  description = "",
  canonical,
  openGraph,
} = Astro.props;
openGraph;
---

<!doctype html>
<html lang={lang} class="dark">
  <head>
    <SEO
      title={title}
      titleDefault="Bienvenidos a la U.E.F.Pichincha"
      description={description}
      openGraph={{
        basic: {
          title: openGraph?.basic?.title || "",
          type: openGraph?.basic?.type || "",
          image: openGraph?.basic?.image || "",
          url: openGraph?.basic?.url || Astro.url.href,
        },
      }}
      canonical={canonical}
    />
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href={icon} />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <meta name="keywords" content={keywords} />
    <slot name="opengraph" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Kanit:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Noto+Sans:ital,wght@0,100..900;1,100..900&family=Rubik:ital,wght@0,300..900;1,300..900&display=swap"
      rel="stylesheet"
    />
    <ViewTransitions />
    <SpeedInsights />
  </head>
  <body class="bg-white dark:bg-black">
    <slot />
    <div class="h-max w-max fixed bottom-0 right-0 z-10 flex items-end">
      <div class="flex h-10 w-max m-4 gap-2 list-none">
        <button
          id="up-scroll-button"
          class="text-xl z-50 hidden animate-pulse-fade-in animate-iteration-count-infinite animate-direction-alternate animate-duration-1000"
        >
          <FaCircleArrowUp />
        </button>
      </div>
    </div>
    <script src="./../schemas/indexSchema.json" type="application/ld+json"
    ></script>
    <script>
      const button: HTMLElement | null =
        document.getElementById("up-scroll-button");

      let isScrolling: boolean = false;

      window.addEventListener(
        "scroll",
        throttle(() => {
          if (!isScrolling) {
            const alturaDeseada: number = 720; // Altura deseada en píxeles
            const scrollActual: number = window.scrollY || window.pageYOffset;
            if (button) {
              button.classList.toggle("hidden", scrollActual < alturaDeseada);
            }
            isScrolling = true;
            setTimeout(() => {
              isScrolling = false;
            }, 100); // Limitar la frecuencia de activación a cada 100 milisegundos
          }
        }, 100)
      );
      if (button) {
        button.addEventListener("click", () => {
          window.scrollTo(0, 0);
        });
      }
      function throttle(callback: () => void, delay: number): () => void {
        let timeoutId: ReturnType<typeof setTimeout>;
        return () => {
          if (!timeoutId) {
            timeoutId = setTimeout(() => {
              callback();
              timeoutId = null as any;
            }, delay);
          }
        };
      }
    </script>
    <style is:global>
      *::selection {
        background-color: #aa0000;
        color: #fafafa;
      }
      html {
        scroll-behavior: smooth;
        color-scheme: light dark;
        scrollbar-width: thin;
        scrollbar-color: #27272a white;
      }
      html.dark {
        scrollbar-width: thin;
        scrollbar-color: white #27272a;
      }
      input {
        border: none;
      }
    </style>
  </body>
</html>
